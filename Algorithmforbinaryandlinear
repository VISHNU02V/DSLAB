STEP1: START
STEP2: intialise a[50],n,i=0
STEP3: front:
STEP4: input the length of array as n
STEP5: i=0 repeat until i<n
  STEP5.1: input the array elements
STEP6: repeat until ch is 'y'
  STEP6.1: intialise c,s,b,i=0,flag=0
  STEP6.2: input the choice into c
  STEP6.3: if c is 1 then
    STEP6.3.1: input number to be searched as s
    STEP6.3.2: i=0 repeat until i<n
      STEP6.3.2.1: if a[i] is s then
        STEP6.3.2.1.1: flag as 1 , then display found the element
    STEP6.3.3: if flag is 0 then
      STEP6.3.3.1: not found
  STEP6.4: if c is 2
    STEP6.4.1: display the unsorted array 
    STEP6.4.2: intialise i as 1 and repeat until i<=n
      STEP6.4.2.1: if a[i-1] greater than a[i] then
        STEP6.4.2.1.1: a[i-1]=a[i-1]+a[i]
        STEP6.4.2.1.2: a[i]=a[i-1]-a[i]
        STEP6.4.2.1.3: a[i-1]=a[i-1]-a[i]
    STEP6.4.3: display the sorted array
    STEP6.4.4: input the element to be searched as b
    STEP6.4.5: intialise low as 0,high as n-1
    STEP6.4.6: repeat until low<high
      STEP6.4.6.1: mid=(low+high)/2
      STEP6.4.6.2: if b greater than a[mid] then
        STEP6.4.6.2.1: low=mid+1
      STEP6.4.6.3: else if b less than a[mid] then
        STEP6.4.6.3.1: high=mid-1
      STEP6.4.6.4: else
        STEP6.4.6.4.1: flag=1
        STEP6.4.6.4.2: break
    STEP6.4.7: if flag is 0 then 
      STEP6.4.7.1: element not found
    STEP6.4.8: else
      STEP6.4.8.1: element found at mid+1 th position
  STEP6.5: if c is 3 then
    STEP6.5.1: display input new array
    STEP6.5.2: go to front to step 3
  STEP6.6: input value for ch ,if ch is y then goto STEP6 or if ch is not y goto STEP7
STEP7: STOP
